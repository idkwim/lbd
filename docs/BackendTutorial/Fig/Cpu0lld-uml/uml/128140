format 74
"Cpu0" // Cpu0
  revision 4
  modified_by 12 "cschen"
  // class settings
  //class diagram settings
  draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
  //use case diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default class_drawing_mode default shadow default show_stereotype_properties default
  //sequence diagram settings
  show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
  //collaboration diagram settings
  show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
  //object diagram settings
   write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
  //component diagram settings
  package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //deployment diagram settings
  package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
  draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
  //state diagram settings
  package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
  show_activities default region_horizontally default drawing_language default show_stereotype_properties default
  //activity diagram settings
  package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
  show_infonote default drawing_language default show_stereotype_properties default
  
  cpp_h_dir "/home/cschen/test/tmp/Cpu0lld-uml/Cpu0lld-src/ELF/Cpu0/"
  cpp_src_dir "/home/cschen/test/tmp/Cpu0lld-uml/Cpu0lld-src/ELF/Cpu0/"
  cpp_namespace "lld::elf"
  classview 128140 "Cpu0"
    //class diagram settings
    draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
    //collaboration diagram settings
    show_full_operations_definition default show_hierarchical_rank default write_horizontally default drawing_language default package_name_in_tab default show_context default show_msg_context default draw_all_relations default shadow default show_stereotype_properties default
    //object diagram settings
     write_horizontally default package_name_in_tab default show_context default auto_label_position default draw_all_relations default shadow default show_stereotype_properties default
    //sequence diagram settings
    show_full_operations_definition default write_horizontally default class_drawing_mode default drawing_language default draw_all_relations default shadow default show_stereotype_properties default show_class_context_mode default show_msg_context_mode default
    //state diagram settings
    package_name_in_tab default show_context default auto_label_position default write_trans_label_horizontally default show_trans_definition default draw_all_relations default shadow default
    show_activities default region_horizontally default drawing_language default show_stereotype_properties default
    //class settings
    //activity diagram settings
    package_name_in_tab default show_context default show_opaque_action_definition default auto_label_position default write_flow_label_horizontally default draw_all_relations default shadow default
    show_infonote default drawing_language default show_stereotype_properties default
    class 128140 "ELFReference"
      visibility package 
      nformals 1
      formal name "ELFT" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/ \\brief Relocation References: Defined Atoms may contain references that will
/ need to be patched before the executable is written.
/
/ Construction of ELFReferences is two pass process. ELFReferences are
/ instantiated while we are iterating over symbol tables to atomize
/ symbols. At that time we only know the index of relocation target symbol
/ (not target atom) about a relocation, so we store the index to
/ ELFREference. In the second pass, ELFReferences are revisited to update
/ target atoms by target symbol indexes."
      classrelation 128140 // <generalisation>
	relation 128140 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128140 // <generalisation>
	  b parent class_ref 128268 // typedef1
      end

      operation 128140 "ELFReference"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param in name "rela" explicit_type "Elf_Rela"
	  param in name "off" explicit_type "uint64_t"
	  param in name "kind" explicit_type "Kind"
	  param in name "idx" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw} : _target(nullptr), _targetSymbolIndex(idx),
        _offsetInAtom(off), _addend(rela->r_addend) {
    _kind = kind;
  };
"
	
	
	
	
      end

      operation 128268 "ELFReference"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param in name "rel" explicit_type "Elf_Rel"
	  param in name "off" explicit_type "uint64_t"
	  param in name "kind" explicit_type "Kind"
	  param in name "idx" explicit_type "uint32_t"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} * ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw} : _target(nullptr), _targetSymbolIndex(idx),
        _offsetInAtom(off), _addend(0) {
    _kind = kind;
  };
"
	
	
	
	
      end

      operation 128396 "ELFReference"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "kind" explicit_type "Kind"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw} : _target(nullptr), _targetSymbolIndex(0), _offsetInAtom(0), _addend(0) {
    _kind = kind;
  };
"
	
	
	
	
      end

      operation 128524 "offsetInAtom"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _offsetInAtom; };
"
	
	
	
	
      end

      operation 128652 "target"
	const cpp_virtual cpp_inline public explicit_return_type "Atom"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _target;
  };
"
	
	
	
	
      end

      operation 128780 "targetSymbolIndex"
	const cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _targetSymbolIndex;
  };
"
	
	
	
	
	comment "/ \\brief The symbol table index that contains the target reference."
      end

      operation 128908 "addend"
	const cpp_virtual cpp_inline public explicit_return_type "Addend"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _addend;
  };
"
	
	
	
	
      end

      operation 129036 "setOffset"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "off" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { _offsetInAtom = off; };
"
	
	
	
	
      end

      operation 129164 "setAddend"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "A" explicit_type "Addend"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { _addend = A; };
"
	
	
	
	
      end

      operation 129292 "setTarget"
	cpp_virtual cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "newAtom" explicit_type "Atom"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { _target = newAtom; };
"
	
	
	
	
      end

      attribute 128140 "_target"
	const_attribute private explicit_type "Atom"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 128268 "_targetSymbolIndex"
	private explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 128396 "_offsetInAtom"
	private explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 128524 "_addend"
	private explicit_type "Addend"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 128268 "typedef1"
      visibility package stereotype "typedef" explicit_base_type "Reference"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 128396 "ELFAbsoluteAtom"
      visibility package 
      nformals 1
      formal name "ELFT" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/ \\brief These atoms store symbols that are fixed to a particular address.
/ This atom has no content its address will be used by the writer to fixup
/ references that point to it."
      classrelation 128268 // <generalisation>
	relation 128268 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128268 // <generalisation>
	  b parent class_ref 128524 // typedef2
      end

      operation 129420 "ELFAbsoluteAtom"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param in name "file" explicit_type "ELFFile<ELFT>"
	  param in name "name" explicit_type "StringRef"
	  param in name "symbol" explicit_type "Elf_Sym"
	  param in name "value" explicit_type "uint64_t"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}${)}${volatile}${throw} : _owningFile(file), _name(name), _symbol(symbol), _value(value) {
  };
"
	
	
	
	
      end

      operation 129548 "file"
	const cpp_virtual cpp_inline public explicit_return_type "ELFFile<ELFT>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _owningFile;
  };
"
	
	
	
	
      end

      operation 129676 "scope"
	const cpp_virtual cpp_inline public explicit_return_type "Scope"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    if (_symbol->st_other == llvm::ELF::STV_HIDDEN)
      return scopeLinkageUnit;
    if (_symbol->getBinding() == llvm::ELF::STB_LOCAL)
      return scopeTranslationUnit;
    else
      return scopeGlobal;
  };
"
	
	
	
	
      end

      operation 129804 "name"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _name;
  };
"
	
	
	
	
      end

      operation 129932 "value"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _value;
  };
"
	
	
	
	
      end

      attribute 128652 "_owningFile"
	const_attribute private explicit_type "ELFT"
	stereotype "ELFFile"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> & ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 128780 "_name"
	private explicit_type "StringRef"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 128908 "_symbol"
	const_attribute private explicit_type "Elf_Sym"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 129036 "_value"
	private explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 128524 "typedef2"
      visibility package stereotype "typedef" explicit_base_type "AbsoluteAtom"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 128652 "ELFUndefinedAtom"
      visibility package 
      nformals 1
      formal name "ELFT" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/ \\brief ELFUndefinedAtom: These atoms store undefined symbols and are place
/ holders that will be replaced by defined atoms later in the linking process."
      classrelation 128396 // <generalisation>
	relation 128396 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128396 // <generalisation>
	  b parent class_ref 128780 // typedef3
      end

      operation 130060 "ELFUndefinedAtom"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param in name "file" explicit_type "File"
	  param in name "name" explicit_type "StringRef"
	  param in name "symbol" explicit_type "Elf_Sym"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}${)}${volatile}${throw} : _owningFile(file), _name(name), _symbol(symbol) {};
"
	
	
	
	
      end

      operation 130188 "file"
	const cpp_virtual cpp_inline public explicit_return_type "File"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _owningFile; };
"
	
	
	
	
      end

      operation 130316 "name"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _name; };
"
	
	
	
	
      end

      operation 130444 "canBeNull"
	const cpp_virtual cpp_inline public explicit_return_type "CanBeNull"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    if (_symbol->getBinding() == llvm::ELF::STB_WEAK)
      return CanBeNull::canBeNullAtBuildtime;
    else
      return CanBeNull::canBeNullNever;
  };
"
	
	
	
	
	comment " FIXME: What distinguishes a symbol in ELF that can help decide if the
 symbol is undefined only during build and not runtime? This will make us
 choose canBeNullAtBuildtime and canBeNullAtRuntime."
      end

      attribute 129164 "_owningFile"
	const_attribute private explicit_type "File"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} & ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 129292 "_name"
	private explicit_type "StringRef"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 129420 "_symbol"
	const_attribute private explicit_type "Elf_Sym"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 128780 "typedef3"
      visibility package stereotype "typedef" explicit_base_type "lld::UndefinedAtom"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 128908 "ELFDefinedAtom"
      visibility package 
      nformals 1
      formal name "ELFT" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/ \\brief This atom stores defined symbols and will contain either data or
/ code."
      classrelation 128524 // <generalisation>
	relation 128524 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128524 // <generalisation>
	  b parent class_ref 129036 // typedef4
      end

      operation 130572 "ELFDefinedAtom"
	cpp_inline public explicit_return_type ""
	nparams 9
	  param in name "file" explicit_type "ELFFile<ELFT>"
	  param in name "symbolName" explicit_type "StringRef"
	  param in name "sectionName" explicit_type "StringRef"
	  param in name "symbol" explicit_type "Elf_Sym"
	  param in name "section" explicit_type "Elf_Shdr"
	  param in name "contentData" explicit_type "llvm::ArrayRef<uint8_t>"
	  param in name "referenceStart" explicit_type "uint"
	  param in name "referenceEnd" explicit_type "uint"
	  param inout name "referenceList" explicit_type "std::vector<ELFReference<ELFT>*>"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}, const ${t4} * ${p4}${v4}, ${t5} ${p5}${v5}, ${t6} ${p6}${v6}, ${t7} ${p7}${v7}, ${t8} & ${p8}${v8}${)}${volatile}${throw} : _owningFile(file)
    , _symbolName(symbolName)
    , _sectionName(sectionName)
    , _symbol(symbol)
    , _section(section)
    , _contentData(contentData)
    , _referenceStartIndex(referenceStart)
    , _referenceEndIndex(referenceEnd)
    , _referenceList(referenceList)
    , _targetAtomHandler(nullptr)
    , _contentType(typeUnknown)
    , _permissions(permUnknown) {};
"
	
	
	
	
      end

      operation 130700 "file"
	const cpp_virtual cpp_inline public explicit_return_type "ELFFile<ELFT>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _owningFile;
  };
"
	
	
	
	
      end

      operation 130828 "name"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _symbolName;
  };
"
	
	
	
	
      end

      operation 130956 "ordinal"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _ordinal;
  };
"
	
	
	
	
      end

      operation 131084 "symbol"
	const cpp_inline public explicit_return_type "Elf_Sym"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _symbol; };
"
	
	
	
	
      end

      operation 131212 "section"
	const cpp_inline public explicit_return_type "Elf_Shdr"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _section; };
"
	
	
	
	
      end

      operation 131340 "size"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    // Common symbols are not allocated in object files,
    // so use st_size to tell how many bytes are required.

    // Treat target defined common symbols
    if ((_symbol->st_shndx > llvm::ELF::SHN_LOPROC &&
         _symbol->st_shndx < llvm::ELF::SHN_HIPROC)) {
      if (!_targetAtomHandler) {
        const ELFLinkingContext &eti = (_owningFile.getLinkingContext());
        TargetHandler<ELFT> &TargetHandler = eti.getTargetHandler<ELFT>();
        _targetAtomHandler = &TargetHandler.targetAtomHandler();
      }
      if (_targetAtomHandler->getType(_symbol) == llvm::ELF::STT_COMMON)
        return (uint64_t) _symbol->st_size;
    }
    if ((_symbol->getType() == llvm::ELF::STT_COMMON) ||
        _symbol->st_shndx == llvm::ELF::SHN_COMMON)
      return (uint64_t) _symbol->st_size;

    return _contentData.size();
  };
"
	
	
	
	
      end

      operation 131468 "scope"
	const cpp_virtual cpp_inline public explicit_return_type "Scope"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    if (_symbol->st_other == llvm::ELF::STV_HIDDEN)
      return scopeLinkageUnit;
    else if (_symbol->getBinding() != llvm::ELF::STB_LOCAL)
      return scopeGlobal;
    else
      return scopeTranslationUnit;
  };
"
	
	
	
	
      end

      operation 131596 "interposable"
	const cpp_virtual cpp_inline public explicit_return_type "Interposable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return interposeNo;
  };
"
	
	
	
	
	comment " FIXME: Need to revisit this in future."
      end

      operation 131724 "merge"
	const cpp_virtual cpp_inline public explicit_return_type "Merge"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    if (_symbol->getBinding() == llvm::ELF::STB_WEAK)
      return mergeAsWeak;

    // If the symbol is a target defined and if the target
    // defines the symbol as a common symbol treat it as
    // mergeTentative
    if ((_symbol->st_shndx > llvm::ELF::SHN_LOPROC &&
         _symbol->st_shndx < llvm::ELF::SHN_HIPROC)) {
      if (!_targetAtomHandler) {
        const ELFLinkingContext &eti = (_owningFile.getLinkingContext());
        TargetHandler<ELFT> &TargetHandler = eti.getTargetHandler<ELFT>();
        _targetAtomHandler = &TargetHandler.targetAtomHandler();
      }
      if (_targetAtomHandler->getType(_symbol) == llvm::ELF::STT_COMMON)
        return mergeAsTentative;
    }

    if ((_symbol->getType() == llvm::ELF::STT_COMMON) ||
        _symbol->st_shndx == llvm::ELF::SHN_COMMON)
      return mergeAsTentative;

    return mergeNo;
  };
"
	
	
	
	
	comment " FIXME: What ways can we determine this in ELF?"
      end

      operation 131852 "contentType"
	const cpp_virtual cpp_inline public explicit_return_type "ContentType"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    if (_contentType != typeUnknown)
      return _contentType;

    ContentType ret = typeUnknown;
    uint64_t flags = _section->sh_flags;

    // Treat target defined symbols
    if ((_section->sh_flags & llvm::ELF::SHF_MASKPROC) ||
        ((_symbol->st_shndx > llvm::ELF::SHN_LOPROC &&
          _symbol->st_shndx < llvm::ELF::SHN_HIPROC))) {
      if (!_targetAtomHandler) {
        const ELFLinkingContext &eti = (_owningFile.getLinkingContext());
        TargetHandler<ELFT> &TargetHandler = eti.getTargetHandler<ELFT>();
        _targetAtomHandler = &TargetHandler.targetAtomHandler();
      }
      return _contentType = _targetAtomHandler->contentType(this);
    }

    if (_section->sh_flags ==
        (llvm::ELF::SHF_ALLOC | llvm::ELF::SHF_WRITE | llvm::ELF::SHF_TLS)) {
      return _contentType = _section->sh_type == llvm::ELF::SHT_NOBITS ? typeTLVInitialZeroFill
                                                        : typeTLVInitialData;
    }

    if (_symbol->getType() == llvm::ELF::STT_GNU_IFUNC)
      return _contentType = typeResolver;

    if (_symbol->st_shndx == llvm::ELF::SHN_COMMON)
      return _contentType = typeZeroFill;

    switch (_section->sh_type) {
    case llvm::ELF::SHT_PROGBITS:
      flags &= ~llvm::ELF::SHF_ALLOC;
      flags &= ~llvm::ELF::SHF_GROUP;
      switch (flags) {
      case llvm::ELF::SHF_EXECINSTR:
      case (llvm::ELF::SHF_WRITE|llvm::ELF::SHF_EXECINSTR):
        ret = typeCode;
        break;
      case llvm::ELF::SHF_WRITE:
        ret = typeData;
        break;
      case (llvm::ELF::SHF_MERGE|llvm::ELF::SHF_STRINGS):
      case llvm::ELF::SHF_STRINGS:
        ret = typeConstant;
        break;
      default:
        ret = typeCode;
        break;
      }
      break;
    case llvm::ELF::SHT_NOBITS:
      ret = typeZeroFill;
      break;
    case llvm::ELF::SHT_NULL:
      if ((_symbol->getType() == llvm::ELF::STT_COMMON)
          || _symbol->st_shndx == llvm::ELF::SHN_COMMON)
        ret = typeZeroFill;
      break;
    case llvm::ELF::SHT_INIT_ARRAY:
      ret = typeData;
      break;
    }

    return _contentType = ret;
  };
"
	
	
	
	
      end

      operation 131980 "alignment"
	const cpp_virtual cpp_inline public explicit_return_type "Alignment"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    // Unallocated common symbols specify their alignment constraints in
    // st_value.

    // Treat target defined common symbols
    if ((_symbol->st_shndx > llvm::ELF::SHN_LOPROC &&
         _symbol->st_shndx < llvm::ELF::SHN_HIPROC)) {
      if (!_targetAtomHandler) {
        const ELFLinkingContext &eti = (_owningFile.getLinkingContext());
        TargetHandler<ELFT> &TargetHandler = eti.getTargetHandler<ELFT>();
        _targetAtomHandler = &TargetHandler.targetAtomHandler();
      }
      if (_targetAtomHandler->getType(_symbol) == llvm::ELF::STT_COMMON)
        return Alignment(llvm::Log2_64(_symbol->st_value));
    }

    if ((_symbol->getType() == llvm::ELF::STT_COMMON) ||
        _symbol->st_shndx == llvm::ELF::SHN_COMMON) {
      return Alignment(llvm::Log2_64(_symbol->st_value));
    }
    return Alignment(llvm::Log2_64(_section->sh_addralign),
                     _symbol->st_value % _section->sh_addralign);
  };
"
	
	
	
	
      end

      operation 132108 "sectionChoice"
	const cpp_virtual cpp_inline public explicit_return_type "SectionChoice"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    if (_symbol->st_shndx > llvm::ELF::SHN_LORESERVE)
      return sectionBasedOnContent;

    return sectionCustomRequired;
  };
"
	
	
	
	
	comment " Do we have a choice for ELF?  All symbols live in explicit sections."
      end

      operation 132236 "customSectionName"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    if ((contentType() == typeZeroFill) ||
        (_symbol->st_shndx == llvm::ELF::SHN_COMMON))
      return \".bss\";
    return _sectionName;
  };
"
	
	
	
	
      end

      operation 132364 "sectionPosition"
	const cpp_virtual cpp_inline public explicit_return_type "SectionPosition"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return sectionPositionAny;
  };
"
	
	
	
	
      end

      operation 132492 "deadStrip"
	const cpp_virtual cpp_inline public explicit_return_type "DeadStripKind"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return deadStripNormal;
  };
"
	
	
	
	
	comment " It isn't clear that __attribute__((used)) is transmitted to the ELF object
 file."
      end

      operation 132620 "permissions"
	const cpp_virtual cpp_inline public explicit_return_type "ContentPermissions"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    if (_permissions != permUnknown)
      return _permissions;

    uint64_t flags = _section->sh_flags;
    // Treat target defined symbols
    if ((_symbol->st_shndx > llvm::ELF::SHN_LOPROC &&
         _symbol->st_shndx < llvm::ELF::SHN_HIPROC)) {
      if (!_targetAtomHandler) {
        const ELFLinkingContext &eti = (_owningFile.getLinkingContext());
        TargetHandler<ELFT> &TargetHandler = eti.getTargetHandler<ELFT>();
        _targetAtomHandler = &TargetHandler.targetAtomHandler();
      }
      return _permissions = _targetAtomHandler->contentPermissions(this);
    }
    switch (_section->sh_type) {
    // permRW_L is for sections modified by the runtime
    // loader.
    case llvm::ELF::SHT_REL:
    case llvm::ELF::SHT_RELA:
      return _permissions = permRW_L;

    case llvm::ELF::SHT_DYNAMIC:
    case llvm::ELF::SHT_PROGBITS:
      flags &= ~llvm::ELF::SHF_ALLOC;
      flags &= ~llvm::ELF::SHF_GROUP;
      switch (flags) {
      // Code
      case llvm::ELF::SHF_EXECINSTR:
        return _permissions = permR_X;
      case (llvm::ELF::SHF_WRITE|llvm::ELF::SHF_EXECINSTR):
        return _permissions = permRWX;
      // Data
      case llvm::ELF::SHF_WRITE:
        return _permissions = permRW_;
      // Strings
      case llvm::ELF::SHF_MERGE:
      case llvm::ELF::SHF_STRINGS:
        return _permissions = permR__;

      default:
        if (flags & llvm::ELF::SHF_WRITE)
          return _permissions = permRW_;
        return _permissions = permR__;
      }

    case llvm::ELF::SHT_NOBITS:
      return _permissions = permRW_;

    case llvm::ELF::SHT_INIT_ARRAY:
      return _permissions = permRW_;

    default:
      return _permissions = perm___;
    }
  };
"
	
	
	
	
      end

      operation 132748 "isAlias"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return false;
  };
"
	
	
	
	
	comment " FIXME: Not Sure if ELF supports alias atoms. Find out more."
      end

      operation 132876 "rawContent"
	const cpp_virtual cpp_inline public explicit_return_type "llvm::ArrayRef<uint8_t>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _contentData;
  };
"
	
	
	
	
      end

      operation 133004 "begin"
	const cpp_inline public explicit_return_type "DefinedAtom::reference_iterator"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    uintptr_t index = _referenceStartIndex;
    const void *it = reinterpret_cast<const void*>(index);
    return reference_iterator(*this, it);
  };
"
	
	
	
	
      end

      operation 133132 "end"
	const cpp_inline public explicit_return_type "DefinedAtom::reference_iterator"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    uintptr_t index = _referenceEndIndex;
    const void *it = reinterpret_cast<const void*>(index);
    return reference_iterator(*this, it);
  };
"
	
	
	
	
      end

      operation 133260 "derefIterator"
	const cpp_inline public explicit_return_type "Reference"
	nparams 1
	  param in name "It" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    uintptr_t index = reinterpret_cast<uintptr_t>(It);
    assert(index >= _referenceStartIndex);
    assert(index < _referenceEndIndex);
    return ((_referenceList)[index]);
  };
"
	
	
	
	
      end

      operation 133388 "incrementIterator"
	const cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "It" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    uintptr_t index = reinterpret_cast<uintptr_t>(It);
    ++index;
    It = reinterpret_cast<const void *>(index);
  };
"
	
	
	
	
      end

      operation 133516 "addReference"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "reference" explicit_type "ELFReference<ELFT>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    _referenceList.push_back(reference);
    _referenceEndIndex = _referenceList.size();
  };
"
	
	
	
	
      end

      operation 133644 "setOrdinal"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "ord" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { _ordinal = ord; };
"
	
	
	
	
      end

      attribute 129548 "_owningFile"
	const_attribute private explicit_type "ELFT"
	stereotype "ELFFile"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> & ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 129676 "_symbolName"
	private explicit_type "StringRef"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 129804 "_sectionName"
	private explicit_type "StringRef"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 129932 "_symbol"
	const_attribute private explicit_type "Elf_Sym"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 130060 "_section"
	const_attribute private explicit_type "Elf_Shdr"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 130188 "_contentData"
	private explicit_type "uint8_t"
	stereotype "llvm::ArrayRef"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 130316 "_ordinal"
	private explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 130444 "_referenceStartIndex"
	private explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 130572 "_referenceEndIndex"
	private explicit_type "uint"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 130700 "_referenceList"
	private explicit_type "ELFReference<ELFT> *"
	stereotype "std::vector"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> & ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 130828 "_targetAtomHandler"
	private explicit_type "ELFT"
	stereotype "TargetAtomHandler"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 130956 "_contentType"
	private explicit_type "ContentType"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 131084 "_permissions"
	private explicit_type "ContentPermissions"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 129036 "typedef4"
      visibility package stereotype "typedef" explicit_base_type "DefinedAtom"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 129164 "TargetAtomHandler"
      visibility package 
      nformals 1
      formal name "ELFT" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/ \\brief The target registers a set of handlers for overriding target specific
/ attributes for a DefinedAtom. The Reader uses this class to query for the
/ type of atom and its permissions"
      operation 164492 "contentType"
	const cpp_virtual cpp_inline public explicit_return_type "DefinedAtom::ContentType"
	nparams 1
	  param in name "atom" explicit_type "ELFDefinedAtom<ELFT>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return atom->contentType();
  };
"
	
	
	
	
      end

      operation 164620 "contentType"
	const cpp_virtual cpp_inline public explicit_return_type "DefinedAtom::ContentType"
	nparams 2
	  param in name "shdr" explicit_type "Elf_Shdr"
	  param in name "sym" explicit_type "Elf_Sym"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}, const ${t1} * ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    return DefinedAtom::typeZeroFill;
  };
"
	
	
	
	
      end

      operation 164748 "contentPermissions"
	const cpp_virtual cpp_inline public explicit_return_type "DefinedAtom::ContentPermissions"
	nparams 1
	  param in name "atom" explicit_type "ELFDefinedAtom<ELFT>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return atom->permissions();
  };
"
	
	
	
	
      end

      operation 164876 "getType"
	const cpp_virtual cpp_inline public explicit_return_type "int64_t"
	nparams 1
	  param in name "sym" explicit_type "Elf_Sym"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return llvm::ELF::STT_NOTYPE;
  };
"
	
	
	
	
      end

      operation 165004 "~TargetAtomHandler"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end
    end

    class 129292 "ELFMergeAtom"
      visibility package 
      nformals 1
      formal name "ELFT" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/ \\brief This atom stores mergeable Strings"
      classrelation 128652 // <generalisation>
	relation 128652 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128652 // <generalisation>
	  b parent class_ref 129036 // typedef4
      end

      operation 133772 "ELFMergeAtom"
	cpp_inline public explicit_return_type ""
	nparams 5
	  param in name "file" explicit_type "ELFFile<ELFT>"
	  param in name "sectionName" explicit_type "StringRef"
	  param in name "section" explicit_type "Elf_Shdr"
	  param in name "contentData" explicit_type "llvm::ArrayRef<uint8_t>"
	  param in name "offset" explicit_type "uint64_t"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}, ${t3} ${p3}${v3}, ${t4} ${p4}${v4}${)}${volatile}${throw} : _owningFile(file), _sectionName(sectionName), _section(section),
        _contentData(contentData), _offset(offset) {
  };
"
	
	
	
	
      end

      operation 133900 "file"
	const cpp_virtual cpp_inline public explicit_return_type "ELFFile<ELFT>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _owningFile;
  };
"
	
	
	
	
      end

      operation 134028 "name"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return \"\";
  };
"
	
	
	
	
      end

      operation 134156 "section"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _section->sh_name; };
"
	
	
	
	
      end

      operation 134284 "offset"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _offset; };
"
	
	
	
	
      end

      operation 134412 "setOrdinal"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "ord" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { _ordinal = ord; };
"
	
	
	
	
      end

      operation 134540 "ordinal"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _ordinal; };
"
	
	
	
	
      end

      operation 134668 "size"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _contentData.size(); };
"
	
	
	
	
      end

      operation 134796 "scope"
	const cpp_virtual cpp_inline public explicit_return_type "Scope"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return scopeTranslationUnit; };
"
	
	
	
	
      end

      operation 134924 "interposable"
	const cpp_virtual cpp_inline public explicit_return_type "Interposable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return interposeNo; };
"
	
	
	
	
      end

      operation 135052 "merge"
	const cpp_virtual cpp_inline public explicit_return_type "Merge"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mergeByContent; };
"
	
	
	
	
      end

      operation 135180 "contentType"
	const cpp_virtual cpp_inline public explicit_return_type "ContentType"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return typeConstant; };
"
	
	
	
	
      end

      operation 135308 "alignment"
	const cpp_virtual cpp_inline public explicit_return_type "Alignment"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return Alignment(llvm::Log2_64(_section->sh_addralign));
  };
"
	
	
	
	
      end

      operation 135436 "sectionChoice"
	const cpp_virtual cpp_inline public explicit_return_type "SectionChoice"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return sectionCustomRequired; };
"
	
	
	
	
      end

      operation 135564 "customSectionName"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _sectionName; };
"
	
	
	
	
      end

      operation 135692 "sectionPosition"
	const cpp_virtual cpp_inline public explicit_return_type "SectionPosition"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return sectionPositionAny; };
"
	
	
	
	
      end

      operation 135820 "deadStrip"
	const cpp_virtual cpp_inline public explicit_return_type "DeadStripKind"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return deadStripNormal; };
"
	
	
	
	
      end

      operation 135948 "permissions"
	const cpp_virtual cpp_inline public explicit_return_type "ContentPermissions"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return permR__; };
"
	
	
	
	
      end

      operation 136076 "isThumb"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return false; };
"
	
	
	
	
      end

      operation 136204 "isAlias"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return false; };
"
	
	
	
	
      end

      operation 136332 "rawContent"
	const cpp_virtual cpp_inline public explicit_return_type "llvm::ArrayRef<uint8_t>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _contentData; };
"
	
	
	
	
      end

      operation 136460 "begin"
	const cpp_inline public explicit_return_type "DefinedAtom::reference_iterator"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    uintptr_t index = 0;
    const void *it = reinterpret_cast<const void *>(index);
    return reference_iterator(*this, it);
  };
"
	
	
	
	
      end

      operation 136588 "end"
	const cpp_inline public explicit_return_type "DefinedAtom::reference_iterator"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    uintptr_t index = 0;
    const void *it = reinterpret_cast<const void *>(index);
    return reference_iterator(*this, it);
  };
"
	
	
	
	
      end

      operation 136716 "derefIterator"
	const cpp_inline public explicit_return_type "Reference"
	nparams 1
	  param in name "It" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { return nullptr; };
"
	
	
	
	
      end

      operation 136844 "incrementIterator"
	const cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "It" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end

      attribute 131212 "_owningFile"
	const_attribute private explicit_type "ELFT"
	stereotype "ELFFile"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> & ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 131340 "_sectionName"
	private explicit_type "StringRef"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 131468 "_section"
	const_attribute private explicit_type "Elf_Shdr"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 131596 "_contentData"
	private explicit_type "uint8_t"
	stereotype "llvm::ArrayRef"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 131724 "_ordinal"
	private explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 131852 "_offset"
	private explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 129420 "ELFCommonAtom"
      visibility package 
      nformals 1
      formal name "ELFT" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 128780 // <generalisation>
	relation 128780 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128780 // <generalisation>
	  b parent class_ref 129036 // typedef4
      end

      operation 136972 "ELFCommonAtom"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param in name "file" explicit_type "ELFFile<ELFT>"
	  param in name "symbolName" explicit_type "StringRef"
	  param in name "symbol" explicit_type "Elf_Sym"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} * ${p2}${v2}${)}${volatile}${throw} : _owningFile(file),
        _symbolName(symbolName),
        _symbol(symbol) {};
"
	
	
	
	
      end

      operation 137100 "file"
	const cpp_virtual cpp_inline public explicit_return_type "ELFFile<ELFT>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _owningFile;
  };
"
	
	
	
	
      end

      operation 137228 "name"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _symbolName;
  };
"
	
	
	
	
      end

      operation 137356 "ordinal"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _ordinal;
  };
"
	
	
	
	
      end

      operation 137484 "setOrdinal"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "ord" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    _ordinal = ord;
  };
"
	
	
	
	
      end

      operation 137612 "size"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _symbol->st_size;
  };
"
	
	
	
	
      end

      operation 137740 "scope"
	const cpp_virtual cpp_inline public explicit_return_type "Scope"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    if (_symbol->st_other == llvm::ELF::STV_HIDDEN)
      return scopeLinkageUnit;
    else if (_symbol->getBinding() != llvm::ELF::STB_LOCAL)
      return scopeGlobal;
    else
      return scopeTranslationUnit;
  };
"
	
	
	
	
      end

      operation 137868 "interposable"
	const cpp_virtual cpp_inline public explicit_return_type "Interposable"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return interposeNo;
  };
"
	
	
	
	
      end

      operation 137996 "merge"
	const cpp_virtual cpp_inline public explicit_return_type "Merge"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return mergeAsTentative;
  };
"
	
	
	
	
      end

      operation 138124 "contentType"
	const cpp_virtual cpp_inline public explicit_return_type "ContentType"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    if (_symbol->st_shndx >= llvm::ELF::SHN_LORESERVE &&
        _symbol->st_shndx <= llvm::ELF::SHN_HIOS)
      return _owningFile.getLinkingContext().template getTargetHandler<ELFT>().
                 targetAtomHandler().contentType(nullptr, _symbol);
    return typeZeroFill;
  };
"
	
	
	
	
      end

      operation 138252 "alignment"
	const cpp_virtual cpp_inline public explicit_return_type "Alignment"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return Alignment(llvm::Log2_64(_symbol->st_value));
  };
"
	
	
	
	
      end

      operation 138380 "sectionChoice"
	const cpp_virtual cpp_inline public explicit_return_type "SectionChoice"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return sectionBasedOnContent;
  };
"
	
	
	
	
      end

      operation 138508 "customSectionName"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return \".bss\";
  };
"
	
	
	
	
      end

      operation 138636 "sectionPosition"
	const cpp_virtual cpp_inline public explicit_return_type "SectionPosition"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return sectionPositionAny;
  };
"
	
	
	
	
      end

      operation 138764 "deadStrip"
	const cpp_virtual cpp_inline public explicit_return_type "DeadStripKind"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return deadStripNormal;
  };
"
	
	
	
	
      end

      operation 138892 "permissions"
	const cpp_virtual cpp_inline public explicit_return_type "ContentPermissions"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return permRW_;
  };
"
	
	
	
	
      end

      operation 139020 "isAlias"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return false;
  };
"
	
	
	
	
      end

      operation 139148 "rawContent"
	const cpp_virtual cpp_inline public explicit_return_type "ArrayRef<uint8_t>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return ArrayRef<uint8_t>();
  };
"
	
	
	
	
      end

      operation 139276 "begin"
	const cpp_virtual cpp_inline public explicit_return_type "DefinedAtom::reference_iterator"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    uintptr_t index = 0;
    const void *it = reinterpret_cast<const void *>(index);
    return reference_iterator(*this, it);
  };
"
	
	
	
	
      end

      operation 139404 "end"
	const cpp_virtual cpp_inline public explicit_return_type "DefinedAtom::reference_iterator"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    uintptr_t index = 0;
    const void *it = reinterpret_cast<const void *>(index);
    return reference_iterator(*this, it);
  };
"
	
	
	
	
      end

      operation 139532 "~ELFCommonAtom"
	cpp_virtual cpp_inline protected explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 139660 "derefIterator"
	const cpp_virtual cpp_inline protected explicit_return_type "Reference"
	nparams 1
	  param in name "iter" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} * ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    return nullptr;
  };
"
	
	
	
	
      end

      operation 139788 "incrementIterator"
	const cpp_virtual cpp_inline protected explicit_return_type "void"
	nparams 1
	  param in name "iter" explicit_type "void"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {};
"
	
	
	
	
      end

      attribute 131980 "_owningFile"
	const_attribute private explicit_type "ELFT"
	stereotype "ELFFile"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> & ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 132108 "_symbolName"
	private explicit_type "StringRef"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 132236 "_symbol"
	const_attribute private explicit_type "Elf_Sym"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 132364 "_ordinal"
	private explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 129548 "ELFDynamicAtom"
      visibility package 
      nformals 1
      formal name "ELFT" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/ \\brief An atom from a shared library."
      classrelation 128908 // <generalisation>
	relation 128908 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 128908 // <generalisation>
	  b parent class_ref 129676 // typedef5
      end

      operation 139916 "ELFDynamicAtom"
	cpp_inline public explicit_return_type ""
	nparams 4
	  param in name "file" explicit_type "DynamicFile<ELFT>"
	  param in name "symbolName" explicit_type "StringRef"
	  param in name "loadName" explicit_type "StringRef"
	  param in name "symbol" explicit_type "Elf_Sym"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}, const ${t3} * ${p3}${v3}${)}${volatile}${throw} : _owningFile(file), _symbolName(symbolName), _loadName(loadName),
        _symbol(symbol) {
  };
"
	
	
	
	
      end

      operation 140044 "file"
	const cpp_virtual cpp_inline public explicit_return_type "DynamicFile<ELFT>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _owningFile;
  };
"
	
	
	
	
      end

      operation 140172 "name"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _symbolName;
  };
"
	
	
	
	
      end

      operation 140300 "scope"
	const cpp_virtual cpp_inline public explicit_return_type "Scope"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    if (_symbol->st_other == llvm::ELF::STV_HIDDEN)
      return scopeLinkageUnit;
    else if (_symbol->getBinding() != llvm::ELF::STB_LOCAL)
      return scopeGlobal;
    else
      return scopeTranslationUnit;
  };
"
	
	
	
	
      end

      operation 140428 "loadName"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _loadName; };
"
	
	
	
	
      end

      operation 140556 "canBeNullAtRuntime"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _symbol->getBinding() == llvm::ELF::STB_WEAK;
  };
"
	
	
	
	
      end

      attribute 132492 "_owningFile"
	const_attribute private explicit_type "ELFT"
	stereotype "DynamicFile"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> & ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 132620 "_symbolName"
	private explicit_type "StringRef"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 132748 "_loadName"
	private explicit_type "StringRef"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 132876 "_symbol"
	const_attribute private explicit_type "Elf_Sym"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} * ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end
    end

    class 129676 "typedef5"
      visibility package stereotype "typedef" explicit_base_type "SharedLibraryAtom"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 129804 "GOTAtom"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 129036 // <generalisation>
	relation 129036 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 129036 // <generalisation>
	  b parent class_ref 129932 // typedef6
      end

      attribute 133004 "_section"
	private explicit_type "StringRef"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 140684 "GOTAtom"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "f" explicit_type "File"
	  param in name "secName" explicit_type "StringRef"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : SimpleDefinedAtom(f), _section(secName) {
  };
"
	
	
	
	
      end

      operation 140812 "scope"
	const cpp_virtual cpp_inline public explicit_return_type "Scope"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return scopeTranslationUnit; };
"
	
	
	
	
      end

      operation 140940 "sectionChoice"
	const cpp_virtual cpp_inline public explicit_return_type "SectionChoice"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return sectionCustomRequired; };
"
	
	
	
	
      end

      operation 141068 "customSectionName"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _section; };
"
	
	
	
	
      end

      operation 141196 "contentType"
	const cpp_virtual cpp_inline public explicit_return_type "ContentType"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return typeGOT; };
"
	
	
	
	
      end

      operation 141324 "size"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return rawContent().size(); };
"
	
	
	
	
      end

      operation 141452 "permissions"
	const cpp_virtual cpp_inline public explicit_return_type "ContentPermissions"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return permRW_; };
"
	
	
	
	
      end

      operation 141580 "rawContent"
	abstract const cpp_virtual public explicit_return_type "ArrayRef<uint8_t>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 141708 "alignment"
	const cpp_virtual cpp_inline public explicit_return_type "Alignment"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    // The alignment should be 8 byte aligned
    return Alignment(3);
  };
"
	
	
	
	
      end

      operation 141836 "name"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _name; };
"
	
	
	
	
      end

      attribute 133132 "_name"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 141964 "name"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"\"; };
"
	
	
	
	
      end
    end

    class 129932 "typedef6"
      visibility package stereotype "typedef" explicit_base_type "SimpleDefinedAtom"
      cpp_decl "${comment}typedef ${type} ${name};
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
    end

    class 130060 "PLTAtom"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 129164 // <generalisation>
	relation 129164 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 129164 // <generalisation>
	  b parent class_ref 129932 // typedef6
      end

      attribute 133260 "_section"
	private explicit_type "StringRef"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 142092 "PLTAtom"
	cpp_inline public explicit_return_type ""
	nparams 2
	  param in name "f" explicit_type "File"
	  param in name "secName" explicit_type "StringRef"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}, ${t1} ${p1}${v1}${)}${volatile}${throw} : SimpleDefinedAtom(f), _section(secName) {
  };
"
	
	
	
	
      end

      operation 142220 "scope"
	const cpp_virtual cpp_inline public explicit_return_type "Scope"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return scopeTranslationUnit; };
"
	
	
	
	
      end

      operation 142348 "sectionChoice"
	const cpp_virtual cpp_inline public explicit_return_type "SectionChoice"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return sectionCustomRequired; };
"
	
	
	
	
      end

      operation 142476 "customSectionName"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _section; };
"
	
	
	
	
      end

      operation 142604 "contentType"
	const cpp_virtual cpp_inline public explicit_return_type "ContentType"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return typeStub; };
"
	
	
	
	
      end

      operation 142732 "size"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return rawContent().size(); };
"
	
	
	
	
      end

      operation 142860 "permissions"
	const cpp_virtual cpp_inline public explicit_return_type "ContentPermissions"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return permR_X; };
"
	
	
	
	
      end

      operation 142988 "rawContent"
	abstract const cpp_virtual public explicit_return_type "ArrayRef<uint8_t>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 143116 "alignment"
	const cpp_virtual cpp_inline public explicit_return_type "Alignment"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return Alignment(4); // 16
  };
"
	
	
	
	
      end

      operation 143244 "name"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _name; };
"
	
	
	
	
      end

      attribute 133388 "_name"
	public explicit_type "std::string"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      operation 143372 "name"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"\"; };
"
	
	
	
	
      end
    end

    class 130188 "PLT0Atom"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 129292 // <generalisation>
	relation 129292 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 129292 // <generalisation>
	  b parent class_ref 130060 // PLTAtom
      end

      operation 143500 "PLT0Atom"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "f" explicit_type "File"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : PLTAtom(f, \".plt\") {
#ifndef NDEBUG
    _name = \".PLT0\";
#endif
  };
"
	
	
	
	
      end

      classrelation 148364 // <association>
	relation_ref 147980 // <association>
      end
    end

    class 130316 "GLOBAL_OFFSET_TABLEAtom"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 129420 // <generalisation>
	relation 129420 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 129420 // <generalisation>
	  b parent class_ref 129932 // typedef6
      end

      operation 143628 "GLOBAL_OFFSET_TABLEAtom"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "f" explicit_type "File"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : SimpleDefinedAtom(f) {};
"
	
	
	
	
      end

      operation 143756 "name"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"_GLOBAL_OFFSET_TABLE_\"; };
"
	
	
	
	
      end

      operation 143884 "scope"
	const cpp_virtual cpp_inline public explicit_return_type "Scope"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return scopeGlobal; };
"
	
	
	
	
      end

      operation 144012 "sectionChoice"
	const cpp_virtual cpp_inline public explicit_return_type "SectionChoice"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return sectionCustomRequired; };
"
	
	
	
	
      end

      operation 144140 "customSectionName"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \".got.plt\"; };
"
	
	
	
	
      end

      operation 144268 "contentType"
	const cpp_virtual cpp_inline public explicit_return_type "ContentType"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return typeGOT; };
"
	
	
	
	
      end

      operation 144396 "size"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return 0; };
"
	
	
	
	
      end

      operation 144524 "permissions"
	const cpp_virtual cpp_inline public explicit_return_type "ContentPermissions"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return permRW_; };
"
	
	
	
	
      end

      operation 144652 "alignment"
	const cpp_virtual cpp_inline public explicit_return_type "Alignment"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    // Needs 8 byte alignment
    return Alignment(3);
  };
"
	
	
	
	
      end

      operation 144780 "rawContent"
	const cpp_virtual cpp_inline public explicit_return_type "ArrayRef<uint8_t>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return ArrayRef<uint8_t>();
  };
"
	
	
	
	
      end
    end

    class 130444 "TLSGETADDRAtom"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 129548 // <generalisation>
	relation 129548 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 129548 // <generalisation>
	  b parent class_ref 129932 // typedef6
      end

      operation 144908 "TLSGETADDRAtom"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "f" explicit_type "File"
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : SimpleDefinedAtom(f) {};
"
	
	
	
	
      end

      operation 145036 "name"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \"__tls_get_addr\"; };
"
	
	
	
	
      end

      operation 145164 "scope"
	const cpp_virtual cpp_inline public explicit_return_type "Scope"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return scopeGlobal; };
"
	
	
	
	
      end

      operation 145292 "merge"
	const cpp_virtual cpp_inline public explicit_return_type "Merge"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return mergeAsWeak; };
"
	
	
	
	
      end

      operation 145420 "sectionChoice"
	const cpp_virtual cpp_inline public explicit_return_type "SectionChoice"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return sectionCustomRequired; };
"
	
	
	
	
      end

      operation 145548 "customSectionName"
	const cpp_virtual cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return \".text\"; };
"
	
	
	
	
      end

      operation 145676 "contentType"
	const cpp_virtual cpp_inline public explicit_return_type "ContentType"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return typeCode; };
"
	
	
	
	
      end

      operation 145804 "size"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return 0; };
"
	
	
	
	
      end

      operation 145932 "permissions"
	const cpp_virtual cpp_inline public explicit_return_type "ContentPermissions"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return permR_X; };
"
	
	
	
	
      end

      operation 146060 "alignment"
	const cpp_virtual cpp_inline public explicit_return_type "Alignment"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return Alignment(0); };
"
	
	
	
	
      end

      operation 146188 "rawContent"
	const cpp_virtual cpp_inline public explicit_return_type "ArrayRef<uint8_t>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return ArrayRef<uint8_t>(); };
"
	
	
	
	
      end
    end

    class 130572 "Chunk"
      abstract visibility package 
      nformals 1
      formal name "ELFT" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/ \\brief A chunk is a contiguous region of space"
      class 130700 "Kind"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 133516 "K_Header"
	  public type class_ref 130700 // Kind
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 133644 "K_ProgramHeader"
	  public type class_ref 130700 // Kind
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 133772 "K_ELFSegment"
	  public type class_ref 130700 // Kind
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 133900 "K_ELFSection"
	  public type class_ref 130700 // Kind
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 134028 "K_AtomSection"
	  public type class_ref 130700 // Kind
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 134156 "K_SectionHeader"
	  public type class_ref 130700 // Kind
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 130828 "ContentType"
	visibility package stereotype "enum"
	cpp_decl "${comment}enum ${name} {
${items}
};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	attribute 134284 "CT_Unknown"
	  public type class_ref 130828 // ContentType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 134412 "CT_Header"
	  public type class_ref 130828 // ContentType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 134540 "CT_Code"
	  public type class_ref 130828 // ContentType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 134668 "CT_Data"
	  public type class_ref 130828 // ContentType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 134796 "CT_Note"
	  public type class_ref 130828 // ContentType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end

	attribute 134924 "CT_Tls"
	  public type class_ref 130828 // ContentType
	  cpp_decl "  ${name}${value},${comment}"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      operation 146316 "Chunk"
	cpp_inline public explicit_return_type ""
	nparams 3
	  param in name "name" explicit_type "StringRef"
	  param in name "kind" type class_ref 130700 // Kind
	  param in name "context" type class_ref 130956 // ELFLinkingContext
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, const ${t2} & ${p2}${v2}${)}${volatile}${throw} : _name(name), _kind(kind), _fsize(0), _msize(0), _align2(0), _order(0),
        _ordinal(1), _start(0), _fileoffset(0), _context(context) {};
"
	
	
	
	
      end

      operation 146444 "~Chunk"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 146572 "occupiesNoDiskSpace"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return false; };
"
	
	
	
	
	comment " Does the chunk occupy disk space"
      end

      operation 146700 "name"
	const cpp_inline public explicit_return_type "StringRef"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _name; };
"
	
	
	
	
	comment " The name of the chunk"
      end

      operation 146828 "kind"
	const cpp_inline public return_type class_ref 130700 // Kind
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _kind; };
"
	
	
	
	
	comment " Kind of chunk"
      end

      operation 146956 "fileSize"
	const cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _fsize; };
"
	
	
	
	
      end

      operation 147084 "align2"
	const cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _align2; };
"
	
	
	
	
      end

      operation 147212 "ordinal"
	const cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _ordinal;};
"
	
	
	
	
	comment " The ordinal value of the chunk"
      end

      operation 147340 "setOrdinal"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "newVal" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { _ordinal = newVal;};
"
	
	
	
	
      end

      operation 147468 "order"
	const cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _order; };
"
	
	
	
	
	comment " The order in which the chunk would appear in the output file"
      end

      operation 147596 "setOrder"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "order" explicit_type "uint32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { _order = order; };
"
	
	
	
	
      end

      operation 147724 "fileOffset"
	const cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _fileoffset; };
"
	
	
	
	
	comment " Output file offset of the chunk"
      end

      operation 147852 "setFileOffset"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "offset" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { _fileoffset = offset; };
"
	
	
	
	
      end

      operation 147980 "setVAddr"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "start" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { _start = start; };
"
	
	
	
	
	comment " Output start address of the chunk"
      end

      operation 148108 "virtualAddr"
	const cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _start; };
"
	
	
	
	
      end

      operation 148236 "memSize"
	const cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _msize; };
"
	
	
	
	
	comment " Does the chunk occupy memory during execution ?"
      end

      operation 148364 "setMemSize"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param in name "msize" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { _msize = msize; };
"
	
	
	
	
      end

      operation 148492 "getContentType"
	abstract const cpp_virtual public explicit_return_type "int"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment " Whats the contentType of the chunk ?"
      end

      operation 148620 "write"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 2
	  param inout name "writer" explicit_type "ELFWriter"
	  param inout name "buffer" explicit_type "llvm::FileOutputBuffer"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment " Writer the chunk"
      end

      operation 148748 "doPreFlight"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment " Finalize the chunk before assigning offsets/virtual addresses"
      end

      operation 148876 "finalize"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment " Finalize the chunk before writing"
      end

      attribute 135052 "_name"
	protected explicit_type "StringRef"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 129676 // _kind (<directional composition>)
	relation 129676 *-->
	  a role_name "_kind" protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 129676 // _kind (<directional composition>)
	  b parent class_ref 130700 // Kind
      end

      attribute 135180 "_fsize"
	protected explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 135308 "_msize"
	protected explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 135436 "_align2"
	protected explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 135564 "_order"
	protected explicit_type "uint32_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 135692 "_ordinal"
	protected explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 135820 "_start"
	protected explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      attribute 135948 "_fileoffset"
	protected explicit_type "uint64_t"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 129804 // _context (<unidirectional association>)
	relation 129804 --->
	  a role_name "_context" const_relation protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} & ${name}${value};
"
	    classrelation_ref 129804 // _context (<unidirectional association>)
	  b parent class_ref 130956 // ELFLinkingContext
      end
    end

    class 131212 "Cpu0LinkingContext"
      visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/ \\brief The 32 bit index of the relocation in the got this reference refers
/ to."
      classrelation 129932 // <generalisation>
	relation 129932 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 129932 // <generalisation>
	  b parent class_ref 130956 // ELFLinkingContext
      end

      operation 149004 "Cpu0LinkingContext"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "triple" explicit_type "llvm::Triple"
	cpp_decl "    ${comment}${inline}${name}${(}${t0} ${p0}${v0}${)}${volatile}${throw} : ELFLinkingContext(triple, std::unique_ptr<TargetHandlerBase>(
                                  new Cpu0TargetHandler(*this))) {};
"
	
	
	
	
      end

      operation 149132 "isLittleEndian"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return false; };
"
	
	
	
	
      end

      operation 149260 "addPasses"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "pm" explicit_type "PassManager"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "// end anon namespace

${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 149388 "getBaseAddress"
	const cpp_virtual cpp_inline public explicit_return_type "uint64_t"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    if (_baseAddress == 0)
      return 0x000000;
    return _baseAddress;
  };
"
	
	
	
	
	comment " Cpu0 run begin from address 0 while X86 from 0x400000"
      end

      operation 149516 "isDynamicRelocation"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 2
	  param in name "" explicit_type "DefinedAtom"
	  param in name "r" explicit_type "Reference"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    switch (r.kind()){
    case llvm::ELF::R_CPU0_GLOB_DAT:
      return true;
    default:
      return false;
    }
  };
"
	
	
	
	
      end

      operation 149644 "isPLTRelocation"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 2
	  param in name "" explicit_type "DefinedAtom"
	  param in name "r" explicit_type "Reference"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}, const ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract} {
    switch (r.kind()){
    case llvm::ELF::R_CPU0_JUMP_SLOT:
    case llvm::ELF::R_CPU0_RELGOT:
      return true;
    default:
      return false;
    }
  };
"
	
	
	
	
      end

      operation 149772 "isRelativeReloc"
	const cpp_virtual cpp_inline public explicit_return_type "bool"
	nparams 1
	  param in name "r" explicit_type "Reference"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    switch (r.kind()) {
    case llvm::ELF::R_CPU0_RELGOT:
      return true;
    default:
      return false;
    }
  };
"
	
	
	
	
	comment "/ \\brief Cpu0 has two relative relocations
/ a) for supporting IFUNC - R_CPU0_RELGOT
/ b) for supporting relative relocs - R_CPU0_RELATIVE"
      end

      operation 149900 "relocKindFromString"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "ErrorOr<Reference::Kind>"
	nparams 1
	  param in name "str" explicit_type "StringRef"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 150028 "stringFromRelocKind"
	preserve_cpp_body_indent const cpp_virtual public explicit_return_type "ErrorOr<std::string>"
	nparams 1
	  param in name "kind" explicit_type "Reference::Kind"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 150156 "isStaticExecutable"
	const cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return _isStaticExecutable; };
"
	
	
	
	
      end
    end

    class 131340 "Cpu0TargetRelocationHandler"
      visibility package 
      nactuals 1
      actual class class_ref 131468 // TargetRelocationHandler
        rank 0 explicit_value "Cpu0ELFType"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 130060 // <realization>
	relation 130060 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 130060 // <realization>
	  b parent class_ref 131468 // TargetRelocationHandler
      end

      operation 150284 "Cpu0TargetRelocationHandler"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "context" type class_ref 131212 // Cpu0LinkingContext
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : _tlsSize(0), _context(context) {};
"
	
	
	
	
      end

      operation 150412 "applyRelocation"
	const cpp_virtual public explicit_return_type "ErrorOr<void>"
	nparams 4
	  param inout name "" explicit_type "ELFWriter"
	  param inout name "" explicit_type "llvm::FileOutputBuffer"
	  param in name "" explicit_type "lld::AtomLayout"
	  param in name "" explicit_type "Reference"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}, ${t1} & ${p1}, const ${t2} & ${p2}, const ${t3} & ${p3}${)}${const}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      operation 150540 "relocAddend"
	const cpp_virtual public explicit_return_type "int64_t"
	nparams 1
	  param in name "" explicit_type "Reference"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}const ${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      attribute 136204 "_tlsSize"
	private explicit_type "uint64_t"
	cpp_mutable cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 130188 // _context (<unidirectional association>)
	relation 130188 --->
	  a role_name "_context" const_relation private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} & ${name}${value};
"
	    classrelation_ref 130188 // _context (<unidirectional association>)
	  b parent class_ref 131212 // Cpu0LinkingContext
      end
    end

    class 131468 "TargetRelocationHandler"
      abstract visibility package 
      nformals 1
      formal name "ELFT" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      operation 165132 "applyRelocation"
	abstract const cpp_virtual public explicit_return_type "ErrorOr<void>"
	nparams 4
	  param inout name "" explicit_type "ELFWriter"
	  param inout name "" explicit_type "llvm::FileOutputBuffer"
	  param in name "" explicit_type "lld::AtomLayout"
	  param in name "" explicit_type "Reference"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}, ${t1} & ${p1}${v1}, const ${t2} & ${p2}${v2}, const ${t3} & ${p3}${v3}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 165260 "relocAddend"
	const cpp_virtual cpp_inline public explicit_return_type "int64_t"
	nparams 1
	  param in name "" explicit_type "Reference"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} { return 0; };
"
	
	
	
	
      end

      operation 165388 "~TargetRelocationHandler"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end
    end

    class 131596 "Cpu0TargetHandler"
      visibility package 
      nactuals 1
      actual class class_ref 131724 // DefaultTargetHandler
        rank 0 explicit_value "Cpu0ELFType"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 130316 // <realization>
	relation 130316 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 130316 // <realization>
	  b parent class_ref 131724 // DefaultTargetHandler
      end

      operation 150668 "Cpu0TargetHandler"
	public explicit_return_type ""
	nparams 1
	  param inout name "targetInfo" type class_ref 131212 // Cpu0LinkingContext
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}${)}${volatile}${throw};
"
	cpp_def "${comment}${inline}${class}::${name}${(}${t0} & ${p0}${)}${throw}{
  ${body}}
"
	
	
	
	
      end

      operation 150796 "targetLayout"
	cpp_virtual cpp_inline public explicit_return_type "TargetLayout<Cpu0ELFType>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _targetLayout;
  };
"
	
	
	
	
      end

      operation 150924 "getRelocationHandler"
	const cpp_virtual cpp_inline public return_type class_ref 131340 // Cpu0TargetRelocationHandler
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    return _relocationHandler;
  };
"
	
	
	
	
      end

      operation 151052 "addFiles"
	cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "f" explicit_type "InputFiles"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	cpp_def "${comment}${inline}${type} ${class}::${name}${(}${t0} & ${p0}${)}${const}${volatile}${throw}${staticnl}{
  ${body}}
"
	
	
	
	
      end

      class 131980 "GOTFile"
	visibility package 
	cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
	classrelation 130444 // <generalisation>
	  relation 130444 ---|>
	    a public
	      cpp default "${type}"
	      classrelation_ref 130444 // <generalisation>
	    b parent class_ref 132108 // typedef7
	end

	operation 151180 "GOTFile"
	  cpp_inline public explicit_return_type ""
	  nparams 1
	    param in name "eti" type class_ref 130956 // ELFLinkingContext
	  cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : SimpleFile(eti, \"GOTFile\") {};
"
	  
	  
	  
	  
	end

	attribute 136332 "_alloc"
	  public explicit_type "llvm::BumpPtrAllocator"
	  cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	  java_decl ""
	  php_decl ""
	  python_decl ""
	  idl_decl ""
	end
      end

      class 132108 "typedef7"
	visibility package stereotype "typedef" explicit_base_type "SimpleFile"
	cpp_decl "${comment}typedef ${type} ${name};
"
	java_decl ""
	php_decl ""
	python_2_2 python_decl ""
	idl_decl ""
	explicit_switch_type ""
	
      end

      classrelation 130572 // _relocationHandler (<directional composition>)
	relation 130572 *-->
	  a role_name "_relocationHandler" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 130572 // _relocationHandler (<directional composition>)
	  b parent class_ref 131340 // Cpu0TargetRelocationHandler
      end

      attribute 136460 "_targetLayout"
	private explicit_type "Cpu0ELFType"
	stereotype "TargetLayout"
	cpp_decl "    ${comment}${static}${mutable}${volatile}${const}${stereotype}<${type}> ${name}${value};
"
	java_decl ""
	php_decl ""
	python_decl ""
	idl_decl ""
      end

      classrelation 147468 // <composition>
	relation 147468 *---
	  a role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 147468 // <composition>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 147596 // <composition>
      end

      classrelation 147980 // <composition>
	relation 147852 *---
	  a role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 147980 // <composition>
	  b role_name "" private
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} ${name}${value};
"
	    classrelation_ref 148108 // <composition>
      end
    end

    class 131724 "DefaultTargetHandler"
      visibility package 
      nformals 1
      formal name "ELFT" type "class" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 133260 // TargetHandler
        rank 0 explicit_value "ELFT"
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      classrelation 130956 // <realization>
	relation 130956 -_-|>
	  stereotype "bind"
	  a public
	    cpp default "${type}"
	    classrelation_ref 130956 // <realization>
	  b parent class_ref 133260 // TargetHandler
      end

      operation 156172 "DefaultTargetHandler"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "context" type class_ref 130956 // ELFLinkingContext
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}${)}${volatile}${throw} : TargetHandler<ELFT>(context) {};
"
	
	
	
	
      end

      operation 156300 "doesOverrideHeader"
	cpp_inline public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} { return false; };
"
	
	
	
	
      end

      operation 156428 "setHeaderInfo"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "Header" explicit_type "Header<ELFT>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {
    llvm_unreachable(\"Target should provide implementation for function \");
  };
"
	
	
	
	
      end

      operation 156556 "targetAtomHandler"
	cpp_inline public explicit_return_type "TargetAtomHandler<ELFT>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    llvm_unreachable(\"Target should provide implementation for function \");
  };
"
	
	
	
	
	comment "/ TargetAtomHandler"
      end

      operation 156684 "getRelocationHandler"
	const cpp_inline public explicit_return_type "TargetRelocationHandler<ELFT>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract} {
    llvm_unreachable(\"Target should provide implementation for function \");
  };
"
	
	
	
	
      end

      operation 156812 "createDefaultSections"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {};
"
	
	
	
	
	comment "/ Create a set of Default target sections that a target might needj"
      end

      operation 156940 "addSection"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "section" explicit_type "Section<ELFT>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {};
"
	
	
	
	
	comment "/ \\brief Add a section to the current Layout"
      end

      operation 157068 "addFiles"
	cpp_inline public explicit_return_type "void"
	nparams 1
	  param inout name "" explicit_type "InputFiles"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract} {};
"
	
	
	
	
	comment "/ \\brief add new symbol file"
      end

      operation 157196 "finalizeSymbolValues"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {};
"
	
	
	
	
	comment "/ \\brief Finalize the symbol values"
      end

      operation 157324 "allocateCommons"
	cpp_inline public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract} {};
"
	
	
	
	
	comment "/ \\brief allocate Commons, some architectures may move small common
/ symbols over to small data, this would also be used"
      end
    end

    class 131852 "TargetLayout"
      visibility package 
      nformals 1
      formal name "ELFT" type "class" explicit_default_value ""
        explicit_extends ""
      nactuals 1
      actual class class_ref 132236 // DefaultLayout
        rank 0 explicit_value ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/ \\brief The target can override certain functions in the DefaultLayout
/ class so that the order, the name of the section and the segment type could
/ be changed in the final layout"
      operation 166924 "TargetLayout"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param in name "context" type class_ref 130956 // ELFLinkingContext
	cpp_decl "    ${comment}${inline}${name}${(}const ${t0} & ${p0}${v0}${)}${volatile}${throw} : DefaultLayout<ELFT>(context) {};
"
	
	
	
	
      end

      classrelation 147852 // <realization>
	relation 147724 -_-|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 147852 // <realization>
	  b parent class_ref 132236 // DefaultLayout
      end

      classrelation 148108 // <composition>
	relation_ref 147852 // <composition>
      end
    end

    class 132236 "DefaultLayout"
      visibility package 
      nformals 1
      formal name "ELFT" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/ \\brief The DefaultLayout class is used by the Writer to arrange
/        sections and segments in the order determined by the target ELF
/        format. The writer creates a single instance of the DefaultLayout
/        class"
      classrelation 147724 // <realization>
	relation 147596 -_-|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 147724 // <realization>
	  b parent class_ref 132364 // Layout
      end
    end

    class 132364 "Layout"
      abstract visibility package 
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/ \\brief The ELFLayout is an abstract class for managing the final layout for
/        the kind of binaries(Shared Libraries / Relocatables / Executables 0
/        Each architecture (Hexagon, PowerPC, MIPS) would have a concrete
/        subclass derived from Layout for generating each binary thats
         needed by the lld linker"
      operation 163468 "getSectionOrder"
	abstract cpp_virtual public explicit_return_type "SectionOrder"
	nparams 3
	  param in name "name" explicit_type "StringRef"
	  param in name "contentType" explicit_type "int32_t"
	  param in name "contentPerm" explicit_type "int32_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} ${p1}${v1}, ${t2} ${p2}${v2}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ Return the order the section would appear in the output file"
      end

      operation 163596 "addAtom"
	abstract cpp_virtual public explicit_return_type "ErrorOr<const lld::AtomLayout &>"
	nparams 1
	  param in name "atom" explicit_type "Atom"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}const ${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ \\brief Append the Atom to the layout and create appropriate sections.
/ \\returns A reference to the atom layout or an error. The atom layout will
/ be updated as linking progresses."
      end

      operation 163724 "findAtomAddrByName"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 2
	  param in name "name" explicit_type "StringRef"
	  param inout name "addr" explicit_type "uint64_t"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} ${p0}${v0}, ${t1} & ${p1}${v1}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ find the Atom Address in the current layout"
      end

      operation 163852 "assignSectionsToSegments"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ associates a section to a segment"
      end

      operation 163980 "assignVirtualAddress"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ associates a virtual address to the segment, section, and the atom"
      end

      operation 164108 "assignFileOffsets"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ associates a file offset to the segment, section and the atom"
      end

      operation 164236 "Layout"
	cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${name}${(}${)}${volatile}${throw} {};
"
	
	
	
	
      end

      operation 164364 "~Layout"
	cpp_virtual cpp_inline public explicit_return_type ""
	nparams 0
	cpp_decl "    ${comment}${inline}${virtual}${name}${(}${)}${volatile}${throw} { };
"
	
	
	
	
      end

      classrelation 147596 // <composition>
	relation_ref 147468 // <composition>
      end
    end

    class 133260 "TargetHandler"
      abstract visibility package 
      nformals 1
      formal name "ELFT" type "class" explicit_default_value ""
        explicit_extends ""
      cpp_decl "${comment}${template}class ${name}${inherit} {
${members}};
${inlines}
"
      java_decl ""
      php_decl ""
      python_2_2 python_decl ""
      idl_decl ""
      explicit_switch_type ""
      
      comment "/ \\brief An interface to override functions that are provided by the
/ the default ELF Layout"
      classrelation 131596 // <generalisation>
	relation 131596 ---|>
	  a public
	    cpp default "${type}"
	    classrelation_ref 131596 // <generalisation>
	  b parent class_ref 133388 // TargetHandlerBase
      end

      operation 165516 "TargetHandler"
	cpp_inline public explicit_return_type ""
	nparams 1
	  param inout name "targetInfo" type class_ref 130956 // ELFLinkingContext
	cpp_decl "    ${comment}${inline}${name}${(}${t0} & ${p0}${v0}${)}${volatile}${throw} : _context(targetInfo) {};
"
	
	
	
	
      end

      operation 165644 "doesOverrideHeader"
	abstract cpp_virtual public explicit_return_type "bool"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ If the target overrides ELF header information, this API would
/ return true, so that the target can set all fields specific to
/ that target"
      end

      operation 165772 "setHeaderInfo"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "Header" explicit_type "Header<ELFT>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ Set the ELF Header information"
      end

      operation 165900 "targetLayout"
	abstract cpp_virtual public explicit_return_type "TargetLayout<ELFT>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ TargetLayout"
      end

      operation 166028 "targetAtomHandler"
	abstract cpp_virtual public explicit_return_type "TargetAtomHandler<ELFT>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ TargetAtomHandler"
      end

      operation 166156 "getRelocationHandler"
	abstract const cpp_virtual public explicit_return_type "TargetRelocationHandler<ELFT>"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}const ${type} & ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
      end

      operation 166284 "createDefaultSections"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ Create a set of Default target sections that a target might needj"
      end

      operation 166412 "addSection"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "section" explicit_type "Section<ELFT>"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} * ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ \\brief Add a section to the current Layout"
      end

      operation 166540 "addFiles"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 1
	  param inout name "" explicit_type "InputFiles"
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${t0} & ${p0}${v0}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ \\brief add new symbol file"
      end

      operation 166668 "finalizeSymbolValues"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ \\brief Finalize the symbol values"
      end

      operation 166796 "allocateCommons"
	abstract cpp_virtual public explicit_return_type "void"
	nparams 0
	cpp_decl "    ${comment}${friend}${static}${inline}${virtual}${type} ${name}${(}${)}${const}${volatile}${throw}${abstract};
"
	
	
	
	
	comment "/ \\brief allocate Commons, some architectures may move small common
/ symbols over to small data, this would also be used"
      end

      classrelation 131724 // _context (<unidirectional association>)
	relation 131724 --->
	  a role_name "_context" const_relation protected
	    cpp default "    ${comment}${static}${mutable}${volatile}${const}${type} & ${name}${value};
"
	    classrelation_ref 131724 // _context (<unidirectional association>)
	  b parent class_ref 130956 // ELFLinkingContext
      end
    end

    classdiagram 128140 "Cpu0lld-main"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end

    classdiagram 141196 "Cpu0lld-relation"
      draw_all_relations default hide_attributes default hide_operations default hide_getset_operations default show_members_full_definition default show_members_visibility default show_members_stereotype default show_members_context default show_members_multiplicity default show_members_initialization default show_attribute_modifiers default member_max_width 0 show_parameter_dir default show_parameter_name default package_name_in_tab default class_drawing_mode default drawing_language default show_context_mode default auto_label_position default show_relation_modifiers default show_relation_visibility default show_infonote default shadow default show_stereotype_properties default
      size A4
    end
  end

  deploymentview 128140 "Cpu0"
    //deployment diagram settings
    package_name_in_tab default show_context default write_horizontally default auto_label_position default draw_all_relations default shadow default
    draw_component_as_icon default show_component_req_prov default show_component_rea default show_stereotype_properties default
    artifact 128140 "Atoms"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 128268 // typedef1
	class_ref 128140 // ELFReference
	class_ref 128524 // typedef2
	class_ref 128396 // ELFAbsoluteAtom
	class_ref 128780 // typedef3
	class_ref 128652 // ELFUndefinedAtom
	class_ref 129036 // typedef4
	class_ref 128908 // ELFDefinedAtom
	class_ref 129292 // ELFMergeAtom
	class_ref 129420 // ELFCommonAtom
	class_ref 129676 // typedef5
	class_ref 129548 // ELFDynamicAtom
	class_ref 129932 // typedef6
	class_ref 129804 // GOTAtom
	class_ref 130060 // PLTAtom
	class_ref 130188 // PLT0Atom
	class_ref 130316 // GLOBAL_OFFSET_TABLEAtom
	class_ref 130444 // TLSGETADDRAtom
      end
    end

    artifact 128268 "Chunk"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 130572 // Chunk
      end
    end

    artifact 128524 "Cpu0LinkingContext"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 131212 // Cpu0LinkingContext
      end
    end

    artifact 128652 "Cpu0RelocationHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 131340 // Cpu0TargetRelocationHandler
      end
    end

    artifact 128780 "Cpu0TargetHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 131596 // Cpu0TargetHandler
      end
    end

    artifact 128908 "DefaultLayout"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
      end
    end

    artifact 129036 "DefaultTargetHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 131724 // DefaultTargetHandler
      end
    end

    artifact 129292 "Layout"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 132364 // Layout
      end
    end

    artifact 129420 "TargetHandler"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 129164 // TargetAtomHandler
	class_ref 131468 // TargetRelocationHandler
	class_ref 133260 // TargetHandler
      end
    end

    artifact 129548 "TargetLayout"
      stereotype "source"
      cpp_h "#ifndef ${NAMESPACE}_${NAME}_H
#define ${NAMESPACE}_${NAME}_H

${comment}
${includes}
${declarations}
${namespace_start}
${definition}
${namespace_end}
#endif
"
      cpp_src "${comment}
${includes}
${namespace_start}
${members}
${namespace_end}"
      associated_classes
	class_ref 131852 // TargetLayout
      end
    end
  end

  package_ref 128268 // lld

  package_ref 128396 // Cpu0
end
