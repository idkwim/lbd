test result:

File                              Result v:pass x:fail        comment
------------------------------------------------------------------------------------------
ch3-directive.ll                          v
ch3-proepilog.ll                          v
ch3-ret.ll                                v
ch4_1.ll                                  v
ch4_2-mod.ll                              v
ch4_2_2-mod.ll                            v
ch4_3-div.ll                              v
2008-06-05-Carry.ll                       v
2008-07-03-SRet.ll                        v
2008-07-15InternalConstant.ll             v
addc.ll                                   v
addi.ll                                   v
address-mode.ll                           v
alloca.ll                                 v
analyzebranch.ll                          v
and1.ll                                   v
asm-large-immediate.ll                    v
blockaddr.ll                              x                   Not C/C++ language
br-jmp.ll                                 v
cmov.ll                                   x                   No need to support. IR select is clang optimized version for conditional instruction used in small basic block
cprestore.ll                              v
div.ll                                    v
divrem.ll                                 v
divu.ll                                   v
divu_reml.ll                              v
double2int.ll                             v
eh-dwraf-cfa.ll                           *
eh-return32.ll                            *
eh-return64.ll                            x
eh.ll                                     x
ex2.ll                                    v
fastcc.ll                                 x                   Fast Call. No need in Cpu0
fneg.ll                                   v                   No call to hard float point instruction. Use soft float function call instead. Cpu0 only supply soft float, keep this test case in case of Cpu0 hard float instructions support in future, even it is no need at this point.
fp-spill-reload.ll                        v
frame-address.ll                          x                   Cpu0 bug
global-address.ll                         v
global-pointer.ll                         v
gprestore.ll                              v
helloworld.ll                             v                   But need to check the rolocation-mode=pic generated code is correct or not.
hf16_1.ll                                 v
i32k.ll                                   v
i64arg.ll                                 v
imm.ll                                    v
indirectcall.ll                           v
init-array.ll                             x                   Don't know the purpose.
inlineasm-xxx.ll                          x                   No support tail inline asm, such as tail call i32 asm sideeffect "add $0,$1,$2", "=r,r,I"(i32 7, i32 -3)
jstat.ll                                  x                   No support jump table (C/C++ corresponding statement ?)
largeimm1.ll                              v                   Purpose ?

module-asm.ll                             v

seteq.ll                                  v

sext_inreg.ll                             v

